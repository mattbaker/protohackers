defmodule ProtohackerTest.BankServerTest do
  use ExUnit.Case

  test "problem example" do
    socket = connect()

    # <-- I 12345 101
    :gen_tcp.send(socket, <<0x49, 0x00, 0x00, 0x30, 0x39, 0x00, 0x00, 0x00, 0x65>>)
    # <-- I 12346 102
    :gen_tcp.send(socket, <<0x49, 0x00, 0x00, 0x30, 0x3A, 0x00, 0x00, 0x00, 0x66>>)
    # <-- I 12347 100
    :gen_tcp.send(socket, <<0x49, 0x00, 0x00, 0x30, 0x3B, 0x00, 0x00, 0x00, 0x64>>)
    # <-- I 40960 5
    :gen_tcp.send(socket, <<0x49, 0x00, 0x00, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x05>>)
    # <-- Q 12288 16384
    :gen_tcp.send(socket, <<0x51, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x40, 0x00>>)

    # --> 101
    assert {:ok, <<0x00, 0x00, 0x00, 0x65>>} = :gen_tcp.recv(socket, 0)

    :gen_tcp.close(socket)
  end

  def connect() do
    {:ok, socket} =
      :gen_tcp.connect(:localhost, 3002, [{:active, false}, {:mode, :binary}, {:packet, :raw}])

    socket
  end
end
